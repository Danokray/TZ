'use client';

import { useState, useEffect, Suspense, lazy } from 'react';
import { useRouter } from 'next/navigation';
import Navigation from '@/components/Navigation';
import styles from './page.module.scss';

// –õ–µ–Ω–∏–≤–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ —Ç—è–∂–µ–ª—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
const OrdersSection = lazy(() => import('@/components/OrdersSection'));
const ProfileSection = lazy(() => import('@/components/ProfileSection'));
const StreamSection = lazy(() => import('@/components/StreamSection'));
const PaymentsSection = lazy(() => import('@/components/PaymentsSection'));

export default function DashboardPage() {
  const [user, setUser] = useState<any>(null);
  const [loading, setLoading] = useState(true);
  const router = useRouter();

  useEffect(() => {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const checkAuth = async () => {
      try {
        // –î–æ–±–∞–≤–ª—è–µ–º —Ç–∞–π–º–∞—É—Ç –¥–ª—è API –∑–∞–ø—Ä–æ—Å–∞
        const controller = new AbortController();
        const timeoutId = setTimeout(() => controller.abort(), 10000); // 10 —Å–µ–∫—É–Ω–¥ —Ç–∞–π–º–∞—É—Ç

        const response = await fetch('/api/user/profile', {
          signal: controller.signal,
          headers: {
            'Cache-Control': 'no-cache',
          }
        });
        
        clearTimeout(timeoutId);

        if (response.ok) {
          const userData = await response.json();
          setUser(userData);
        } else {
          // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω, –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤—Ö–æ–¥–∞
          router.push('/auth');
        }
      } catch (error) {
        console.error('Auth check failed:', error);
        if (error instanceof Error && error.name === 'AbortError') {
          console.error('Request timeout');
        }
        router.push('/auth');
      } finally {
        setLoading(false);
      }
    };

    checkAuth();
  }, [router]);

  if (loading) {
    return (
      <div className={styles.loading}>
        <div className={styles.spinner}></div>
        <p>–ó–∞–≥—Ä—É–∑–∫–∞...</p>
      </div>
    );
  }

  if (!user) {
    return null; // –†–µ–¥–∏—Ä–µ–∫—Ç —É–∂–µ –ø—Ä–æ–∏–∑–æ—à–µ–ª
  }

  return (
    <div className={styles.dashboard}>
      <Navigation />
      <div className={styles.content}>
        <div className={styles.welcome}>
          <h1>–ü—Ä–∏–≤–µ—Ç, –ê–ª–∏–º{'\n'}–î–∂–æ–ª–¥–∞—Å–ø–∞–µ–≤ üëã</h1>
        </div>
        
        {/* –ü–µ—Ä–≤—ã–π —Ä—è–¥: –ó–∞–∫–∞–∑—ã (950px) + –ü—Ä–æ—Ñ–∏–ª—å (450px) */}
        <div className={styles.firstRow}>
          <div className={styles.ordersContainer}>
            <Suspense fallback={<div className={styles.skeleton}>–ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞–∫–∞–∑–æ–≤...</div>}>
              <OrdersSection />
            </Suspense>
          </div>
          <Suspense fallback={<div className={styles.skeleton}>–ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–æ—Ñ–∏–ª—è...</div>}>
            <ProfileSection user={user} />
          </Suspense>
        </div>
        
        {/* –í—Ç–æ—Ä–æ–π —Ä—è–¥: –¢—Ä–∞–Ω—Å–ª—è—Ü–∏—è (450px) + –ü–ª–∞—Ç–µ–∂–∏ (950px) */}
        <div className={styles.secondRow}>
          <Suspense fallback={<div className={styles.skeleton}>–ó–∞–≥—Ä—É–∑–∫–∞ —Ç—Ä–∞–Ω—Å–ª—è—Ü–∏–∏...</div>}>
            <StreamSection />
          </Suspense>
          <Suspense fallback={<div className={styles.skeleton}>–ó–∞–≥—Ä—É–∑–∫–∞ –ø–ª–∞—Ç–µ–∂–µ–π...</div>}>
            <PaymentsSection />
          </Suspense>
        </div>
      </div>
    </div>
  );
}