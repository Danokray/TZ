import { NextResponse } from 'next/server';
import bitrixService from '@/services/bitrix';
import { ApiResponse } from '@/types';

export async function POST() {
  try {
    console.log('üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ç–∞–∫—Ç–∞ —Å –¥–µ—Ç–∞–ª—å–Ω–æ–π –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–æ–π...');
    
    // –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ç–∞–∫—Ç–∞ —Å —É–Ω–∏–∫–∞–ª—å–Ω—ã–º email
    const testEmail = `test-${Date.now()}@example.com`;
    const contactData = {
      name: 'Test',
      lastName: 'User',
      email: testEmail,
      phone: '+7 (777) 777-77-77',
      sourceId: 'WEB'
    };
    
    console.log('üìû –î–∞–Ω–Ω—ã–µ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–Ω—Ç–∞–∫—Ç–∞:', contactData);
    
    const result = await bitrixService.createContact(contactData);
    
    console.log('‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–Ω—Ç–∞–∫—Ç–∞:', result);
    
    return NextResponse.json<ApiResponse>({
      success: true,
      data: {
        contactData,
        result,
        message: '–ö–æ–Ω—Ç–∞–∫—Ç —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!'
      },
      message: 'Test contact created successfully'
    });
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–Ω—Ç–∞–∫—Ç–∞:', error);
    
    return NextResponse.json<ApiResponse>({
      success: false,
      error: '–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–Ω—Ç–∞–∫—Ç–∞',
      details: {
        error: error instanceof Error ? error.message : 'Unknown error',
        stack: error instanceof Error ? error.stack : undefined
      }
    }, { status: 500 });
  }
}
