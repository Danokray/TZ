'use client';

import { useState } from 'react';
import styles from './OrdersSection.module.scss';

interface Order {
  id: number;
  title: string;
  image: string;
}

interface OrdersProps {
  onDownload: (orderId: number) => void;
}

const mockOrders: Order[] = [
  {
    id: 1,
    title: '–°—á–µ—Ç–∞ –Ω–∞ –æ–ø–ª–∞—Ç—É –¥–ª—è –Æ—Ä. –õ–∏—Ü',
    image: '/images/order1.png'
  },
  {
    id: 2,
    title: '–ì–∞—Ä–∞–Ω—Ç–∏—è –Ω–∞ –¥–µ—Ç–∞–ª–∏ –¥–ª—è –ø–µ—Ä–µ–¥–Ω–µ–≥–æ –±–∞–º–ø–µ—Ä–∞',
    image: '/images/order2.png'
  },
  {
    id: 3,
    title: '–ß–µ–∫–∏ –¥–ª—è –§–∏–∑.–ª–∏—Ü',
    image: '/images/order3.png'
  },
  {
    id: 4,
    title: '–°—á–µ—Ç–∞ –Ω–∞ –æ–ø–ª–∞—Ç—É –¥–ª—è –Æ—Ä. –õ–∏—Ü',
    image: '/images/order4.png'
  },
  {
    id: 5,
    title: '–î–æ–≥–æ–≤–æ—Ä –Ω–∞ –ø–æ—Å—Ç–∞–≤–∫—É –∑–∞–ø—á–∞—Å—Ç–µ–π',
    image: '/images/order1.png'
  },
  {
    id: 6,
    title: '–ê–∫—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö —Ä–∞–±–æ—Ç',
    image: '/images/order2.png'
  },
  {
    id: 7,
    title: '–°—á–µ—Ç-—Ñ–∞–∫—Ç—É—Ä–∞ ‚Ññ12345',
    image: '/images/order3.png'
  },
  {
    id: 8,
    title: '–ù–∞–∫–ª–∞–¥–Ω–∞—è –Ω–∞ —Ç–æ–≤–∞—Ä',
    image: '/images/order4.png'
  },
  {
    id: 9,
    title: '–°–ø—Ä–∞–≤–∫–∞ –æ –ø—Ä–æ–≤–µ–¥–µ–Ω–Ω–æ–º —Ä–µ–º–æ–Ω—Ç–µ',
    image: '/images/order1.png'
  },
  {
    id: 10,
    title: '–°–º–µ—Ç–∞ –Ω–∞ –∑–∞–ø—á–∞—Å—Ç–∏',
    image: '/images/order2.png'
  },
  {
    id: 11,
    title: '–ü—Ä–æ—Ç–æ–∫–æ–ª –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏',
    image: '/images/order3.png'
  },
  {
    id: 12,
    title: '–î–æ–≥–æ–≤–æ—Ä –Ω–∞ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ',
    image: '/images/order4.png'
  },
  {
    id: 13,
    title: '–ê–∫—Ç –ø—Ä–∏–µ–º–∞-–ø–µ—Ä–µ–¥–∞—á–∏ –∞–≤—Ç–æ–º–æ–±–∏–ª—è',
    image: '/images/order1.png'
  },
  {
    id: 14,
    title: '–°—á–µ—Ç –Ω–∞ –æ–ø–ª–∞—Ç—É —É—Å–ª—É–≥',
    image: '/images/order2.png'
  },
  {
    id: 15,
    title: '–ì–∞—Ä–∞–Ω—Ç–∏–π–Ω—ã–π —Ç–∞–ª–æ–Ω',
    image: '/images/order3.png'
  },
  {
    id: 16,
    title: '–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ —ç–∫—Å–ø–ª—É–∞—Ç–∞—Ü–∏–∏',
    image: '/images/order4.png'
  },
  {
    id: 17,
    title: '–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –∫–∞—á–µ—Å—Ç–≤–∞',
    image: '/images/order1.png'
  },
  {
    id: 18,
    title: '–î–µ–∫–ª–∞—Ä–∞—Ü–∏—è —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è',
    image: '/images/order2.png'
  },
  {
    id: 19,
    title: '–ü–∞—Å–ø–æ—Ä—Ç –∏–∑–¥–µ–ª–∏—è',
    image: '/images/order3.png'
  },
  {
    id: 20,
    title: '–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏',
    image: '/images/order4.png'
  },
  {
    id: 21,
    title: '–ü—Ä–æ—Ç–æ–∫–æ–ª –∏—Å–ø—ã—Ç–∞–Ω–∏–π',
    image: '/images/order1.png'
  },
  {
    id: 22,
    title: '–ê–∫—Ç –≤–≤–æ–¥–∞ –≤ —ç–∫—Å–ø–ª—É–∞—Ç–∞—Ü–∏—é',
    image: '/images/order2.png'
  },
  {
    id: 23,
    title: '–¢–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ –∑–∞–¥–∞–Ω–∏–µ',
    image: '/images/order3.png'
  },
  {
    id: 24,
    title: '–ö–æ–º–º–µ—Ä—á–µ—Å–∫–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ',
    image: '/images/order4.png'
  },
  {
    id: 25,
    title: '–î–æ–≥–æ–≤–æ—Ä –Ω–∞ –≥–∞—Ä–∞–Ω—Ç–∏–π–Ω–æ–µ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ',
    image: '/images/order1.png'
  },
  {
    id: 26,
    title: '–°—á–µ—Ç-—Ñ–∞–∫—Ç—É—Ä–∞ ‚Ññ54321',
    image: '/images/order2.png'
  },
  {
    id: 27,
    title: '–ù–∞–∫–ª–∞–¥–Ω–∞—è –Ω–∞ –≤–æ–∑–≤—Ä–∞—Ç',
    image: '/images/order3.png'
  },
  {
    id: 28,
    title: '–ê–∫—Ç —Å–ø–∏—Å–∞–Ω–∏—è –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤',
    image: '/images/order4.png'
  }
];

export function Orders({ onDownload }: OrdersProps) {
  const [currentSlide, setCurrentSlide] = useState(0);
  const itemsPerSlide = 4;
  const totalSlides = Math.ceil(mockOrders.length / itemsPerSlide);

  const goToSlide = (slideIndex: number) => {
    setCurrentSlide(slideIndex);
  };

  const getCurrentOrders = () => {
    const startIndex = currentSlide * itemsPerSlide;
    return mockOrders.slice(startIndex, startIndex + itemsPerSlide);
  };

  return (
    <div className={styles.ordersSection}>
      <div className={styles.sectionHeader}>
        <div className={styles.sectionTitle}>–ó–∞–∫–∞–∑—ã</div>
      </div>
      
      <div className={styles.ordersContainer}>
        {getCurrentOrders().map(order => (
          <div key={order.id} className={styles.orderCard}>
            <div className={styles.orderImage}>
              <img 
                src={order.image} 
                alt="–î–æ–∫—É–º–µ–Ω—Ç"
                className={styles.documentImage}
                loading="lazy"
                decoding="async"
                onError={(e) => {
                  e.currentTarget.style.display = 'none';
                  const nextElement = e.currentTarget.nextElementSibling as HTMLElement;
                  if (nextElement) {
                    nextElement.style.display = 'flex';
                  }
                }}
              />
              <div className={styles.documentPreview}>
                <div className={styles.documentIcon}>üìÑ</div>
              </div>
            </div>
            <div className={styles.orderTitle}>{order.title}</div>
            <button 
              className={styles.downloadBtn}
              onClick={() => onDownload(order.id)}
            >
              <img src="/images/icons/Mask group.png" alt="Download" className={styles.downloadIconImg} />
              <span>–°–∫–∞—á–∞—Ç—å</span>
            </button>
          </div>
        ))}
      </div>

      <div className={styles.sliderDots}>
        {Array.from({ length: totalSlides }, (_, index) => (
          <button
            key={index}
            className={`${styles.dot} ${currentSlide === index ? styles.activeDot : ''}`}
            onClick={() => goToSlide(index)}
          />
        ))}
      </div>
    </div>
  );
}

export default function OrdersSection() {
  const handleDownload = (orderId: number) => {
    console.log(`Downloading order ${orderId}`);
    // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
  };

  return <Orders onDownload={handleDownload} />;
}
